package org.mifosplatform.portfolio.loanaccount.service;

import java.math.BigDecimal;

import org.mifosplatform.infrastructure.core.api.JsonCommand;
import org.mifosplatform.infrastructure.core.api.JsonQuery;
import org.mifosplatform.infrastructure.core.data.CommandProcessingResult;
import org.mifosplatform.infrastructure.core.serialization.FromJsonHelper;
import org.mifosplatform.infrastructure.security.service.PlatformSecurityContext;
import org.mifosplatform.organisation.taxmapping.domain.TaxMap;
import org.mifosplatform.organisation.taxmapping.domain.TaxMapRepository;
import org.mifosplatform.portfolio.charge.domain.ChargeRepositoryWrapper;
import org.mifosplatform.portfolio.loanaccount.domain.LoanChargeRepository;
import org.mifosplatform.portfolio.loanaccount.domain.LoanRepository;
import org.mifosplatform.portfolio.loanaccount.loanschedule.service.LoanScheduleCalculationPlatformService;
import org.mifosplatform.portfolio.loanproduct.service.LoanProductReadPlatformService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.google.gson.JsonElement;

@Service
public class LoanCalculatorWritePlatformServiceImpl implements LoanCalculatorWritePlatformService {

	
	private final PlatformSecurityContext context;
    private final LoanRepository loanRepository; 
    private final ChargeRepositoryWrapper chargeRepository;
    private final LoanChargeRepository loanChargeRepository;    
    private final LoanProductReadPlatformService loanProductReadPlatformService;  
    private final LoanChargeReadPlatformService loanChargeReadPlatformService;
    private final LoanReadPlatformService loanReadPlatformService;
    private final FromJsonHelper fromApiJsonHelper;
    private final LoanScheduleCalculationPlatformService calculationPlatformService;
    private final TaxMapRepositoryWrapper taxMapRepository;
    
    
    private BigDecimal accountingWDV = BigDecimal.ZERO;
    private BigDecimal taxWDV = BigDecimal.ZERO;
    
    public final String ACCOUNTWDV = "ACCT.TAX";
    public final String TAXWDV = "TAX_DEP";

    @Autowired
    public LoanCalculatorWritePlatformServiceImpl(final PlatformSecurityContext context,
            final LoanRepository loanRepository, final ChargeRepositoryWrapper chargeRepository, 
            final LoanChargeRepository loanChargeRepository, 
            final LoanProductReadPlatformService loanProductReadPlatformService,
            final LoanChargeReadPlatformService loanChargeReadPlatformService,
            final LoanReadPlatformService loanReadPlatformService, final FromJsonHelper fromApiJsonHelper,
            final LoanScheduleCalculationPlatformService calculationPlatformService,
            final TaxMapRepository taxMapRepository) {
    	
        this.context = context;        
        this.loanRepository = loanRepository;
        this.chargeRepository = chargeRepository;
        this.loanChargeRepository = loanChargeRepository;
        this.loanProductReadPlatformService = loanProductReadPlatformService;
        this.loanChargeReadPlatformService = loanChargeReadPlatformService;
        this.loanReadPlatformService = loanReadPlatformService;
        this.fromApiJsonHelper = fromApiJsonHelper;
        this.calculationPlatformService = calculationPlatformService;
        this.taxMapRepository = taxMapRepository;
    }
	
	@Override
	public CommandProcessingResult createLoanCalculator(JsonCommand command) {
		
		final JsonElement parsedQuery = this.fromApiJsonHelper.parse(command.json());
		
		final JsonQuery query = JsonQuery.from(command.json(), parsedQuery, this.fromApiJsonHelper);

		String vatTaxJsonString = this.calculationPlatformService.calculateTaxLoanSchedule(query, false);
		
		JsonElement vatTaxJson = this.fromApiJsonHelper.parse(vatTaxJsonString);
		
		final BigDecimal finalAmount = this.fromApiJsonHelper.extractBigDecimalWithLocaleNamed("finalAmount", vatTaxJson);
		final BigDecimal totalPrincipal = this.fromApiJsonHelper.extractBigDecimalWithLocaleNamed("principal", query.parsedJson());	
		final BigDecimal vatAmount = this.fromApiJsonHelper.extractBigDecimalWithLocaleNamed("vatAmount", vatTaxJson);
		
		return null;
	}
	
	private TaxMap getTaxMapData(String taxCode) {
		TaxMap taxMap = this.taxMapRepository.findByTaxCode(taxCode);
	}

}
